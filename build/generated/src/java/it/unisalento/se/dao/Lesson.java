package it.unisalento.se.dao;
// Generated 2-lug-2018 15.46.49 by Hibernate Tools 5.2.0.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Lesson generated by hbm2java
 */
@Entity
@Table(name="lesson"
    ,catalog="university_se"
)
public class Lesson  implements java.io.Serializable {


     private Integer id;
     private Classroom classroom;
     private Subject subject;
     private Timeslot timeslot;
     private Set<Document> documents = new HashSet<Document>(0);

    public Lesson() {
    }

	
    public Lesson(Classroom classroom, Subject subject, Timeslot timeslot) {
        this.classroom = classroom;
        this.subject = subject;
        this.timeslot = timeslot;
    }
    public Lesson(Classroom classroom, Subject subject, Timeslot timeslot, Set<Document> documents) {
       this.classroom = classroom;
       this.subject = subject;
       this.timeslot = timeslot;
       this.documents = documents;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="classroom", nullable=false)
    public Classroom getClassroom() {
        return this.classroom;
    }
    
    public void setClassroom(Classroom classroom) {
        this.classroom = classroom;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="subject", nullable=false)
    public Subject getSubject() {
        return this.subject;
    }
    
    public void setSubject(Subject subject) {
        this.subject = subject;
    }

@ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.PERSIST)
    @JoinColumn(name="timeslot", nullable=false)
    public Timeslot getTimeslot() {
        return this.timeslot;
    }
    
    public void setTimeslot(Timeslot timeslot) {
        this.timeslot = timeslot;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="lesson")
    public Set<Document> getDocuments() {
        return this.documents;
    }
    
    public void setDocuments(Set<Document> documents) {
        this.documents = documents;
    }




}


